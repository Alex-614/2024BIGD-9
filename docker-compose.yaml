version: "3.8"

name: bigdnews

services:

  # bigdnews database
  bigdnews-mongo:
    container_name: bigdnews-mongo
    hostname: bigdnews-mongo
    networks:
      - bigdnews
    image: mongo
    restart: on-failure
    volumes:
      - ./database/mongo/database.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo-data:/data/db
      - mongo-configdb:/data/configdb
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@localhost:${DB_PORT}/?authSource=${MONGO_INITDB_DATABASE} --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
      start_interval: 5s
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      DB_PORT: 27017
      MONGO_INITDB_DATABASE: BigDNews

  bigdnews-service:
    container_name: bigdnews-service
    hostname: bigdnews-service
    build:
      context: ./webservice
      dockerfile: Dockerfile
    image: bigdnews-service
    volumes:
      - ./service:/usr/app/
      #- /usr/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      bigdnews-mongo:
        condition: service_healthy
    environment:
      PORT: 3000
      DATABASE_URL: mongodb://127.0.0.1:27017/BigDNews

  # bigdnews scraper
  bigdnews-scraper:
    container_name: bigdnews-scraper
    hostname: bigdnews-scraper
    networks:
      - bigdnews
    build:
      context: ./scraper
      dockerfile: Dockerfile
    image: bigdnews-scraper
    restart: on-failure
    depends_on:
      bigdnews-mongo:
        condition: service_healthy

volumes:
  mongo-data:
  mongo-configdb:

networks:
  bigdnews:




